<!-- Page header -->
<div class="page-header d-print-none">
  <div class="container-xl">
    <div class="row g-2 align-items-center">
      <div class="col">
        <div class="page-pretitle"> Customer </div>
        <h2 class="page-title">{{data.customer.name}}</h2>
      </div>
      <div class="col-auto ms-auto d-print-none">
        <div class="dropdown">
          <button class="btn btn-primary btn-icon ps-md-2 pe-md-3" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="ti ti-plus"></i>
            <span class="d-none d-md-block ms-2">Select New Beneficiaries</span>
          </button>
          <div class="dropdown-menu">
            {{#if (findInArray data.role 'bulk-select')}}
            <span class="dropdown-header">Bank Transfer</span>
            <a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#modal-new-order">
              Bulk Selection
            </a>
            <span class="dropdown-header">Credit Cards</span>
            {{/if}}
            {{#each data.projects}}
            <a class="dropdown-item" onclick="loadDonationOverlay('{{this.slug}}')">
              {{this.name}}
            </a>
            {{/each}}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="container-xl pt-4">
  <div class="row row-cards">
    {{#if data.orders}} {{> showCustomerPayments}} {{/if}}
    {{#if data.subscriptions}} {{> showCustomerOverlayPayments}} {{/if}}
    {{> showCustomer}}
    {{> showCustomerLogs}}
  </div>
</div>

{{> editCustomerModal}}

{{> emptyOrderModal}}

<script src="/static/orders.js"></script>
<script>
  const sendEmailInvite = function (elem) {

    const customerId = $(elem).attr("customer-id");

    $(elem).siblings("input").removeClass("is-invalid");
    $(elem).siblings("input").addClass("is-valid");
    $(elem).siblings(".invalid-feedback").remove();
    $(elem).siblings(".alert").remove();

    let currentBtnHTML = $(elem).html();

    $(elem).html(`<span class="spinner-border spinner-border-sm" role="status"></span>`);

    $.ajax({
      url: `/customer/sendInvite`,
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ customerId }),
      success: function (response) {
        $(elem).html(currentBtnHTML);
        $(elem).after(`
      <div class="w-100 alert alert-success mt-4" role="alert">
        <h4 class="alert-title">Success!</h4>
        <div class="text-secondary">Email invite sent successfully!</div>
      </div>`);
        showDataAsSuch('/getCustomerData/{{data.customer._id}}', '#customer-container');
        showDataAsSuch('/getCustomerLogs/{{data.customer._id}}', '#logs-container');
      },
      error: function (xhr, status, error) {
        $(elem).html(currentBtnHTML);
        $(elem).siblings("input").addClass("is-invalid");
        $(elem).siblings("input").after(`<div class="invalid-feedback">${xhr.responseText}</div> `);
      }
    });
  }

  const showDataAsSuch = function (url, containerId) {
    $.ajax({
      url: url,
      method: 'GET',
      success: function (response) {
        $(containerId).replaceWith(response);
      },
      error: function (error) {
        alert(error.responseText);
      }
    });
  }

  const updateCustomer = function (elem) {

    $(elem).closest(".modal").find("input").removeClass("is-invalid");
    $(elem).closest(".modal").find(".invalid-feedback").remove();
    $(elem).closest(".modal").find("span").removeClass("border-red");
    $(elem).closest(".modal").find("span").removeClass("rounded-end");
    $(elem).closest(".modal").find(".alert").remove();

    let isValid = [];

    $(elem).closest(".modal").find(".form-control, .form-select").each((key, val) => {
      if ($(val).val() == "") {
        $(val).addClass("is-invalid")
        if ($(val).siblings("span").length > 0) {
          $(val).siblings(".invalid-feedback").remove();
          $(val).siblings("span").after(`<div class="invalid-feedback mb-2">Invalid entry</div> `);
          $(val).siblings("span").addClass("is-invalid border-red rounded-end");
          $(val).siblings("input").addClass("is-invalid");
        } else {
          $(val).after(`<div class="invalid-feedback">Invalid entry</div> `);
        }
      } else {
        $(val).addClass("is-valid");
      }
      isValid.push($(val).val() != "");
    });

    const data = $(elem)
      .closest(".modal")
      .find(".form-select, input, textarea")
      .toArray()
      .reduce((total, val) => {
        Object.assign(total, {
          [$(val).attr("name")]: $(val).val()
        });
        return total;
      }, {});


    const projects = $(elem)
      .closest(".modal")
      .find(".projects input:checked")
      .map((key, val) => $(val).val())
      .get();

    if (!(isValid.every(val => val === true))) {
      return false;
    }

    let currentBtnHTML = $(elem).html();
    $(elem).html(`<span class="spinner-border spinner-border-sm me-2" role="status"></span>`);

    $.ajax({
      url: `/customer/update`,
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify(data),
      success: function (response) {
        $(elem).html(currentBtnHTML);
        $(".modal-footer").append(`
        <div class="alert alert-success mt-4 w-100" role="alert">
          <h4 class="alert-title">Succesful!</h4>
          <div class="text-secondary">Customer updated successfully!</div>
        </div>`);
        showDataAsSuch('/getCustomerData/{{data.customer._id}}', '#customer-container');
        showDataAsSuch('/getCustomerLogs/{{data.customer._id}}', '#logs-container');
      },
      error: function (xhr, status, error) {
        $(elem).html(currentBtnHTML);
        if (xhr.status != 400) {
          $(".modal-footer").append(`
        <div class="alert alert-danger mt-4 w-100" role="alert">
          <h4 class="alert-title">Failed to update customer!</h4>
          <div class="text-secondary text-break">${xhr.responseText}</div>
        </div>`);
          return false;
        }
        xhr.responseJSON.forEach(val => {
          if (val.elem == "other") {
            $(".modal-footer").append(`
          <div class="alert alert-danger mt-4 w-100" role="alert">
            <h4 class="alert-title">Failed to update customer!</h4>
            <div class="text-secondary text-break">${val.msg}</div>
          </div>
          `);
            return false;
          };
          $(val.elem).addClass("is-invalid");
          $(val.elem).siblings("span").addClass("border-red rounded-end");
          $(val.elem).parent("div").append(`<div class="mb-2 invalid-feedback">${val.msg}</div> `);
        });
      }
    });

  }

  const getCustomerLogs = function (elem, href) {
    href = href || $(elem).attr("my-href");
    $.ajax({
      url: href,
      method: 'GET',
      success: function (response) {
        $('#logs-container').replaceWith(response);
      },
      error: function (error) {
        $('#logs-container').html(error.responseText);
      }
    })
  }

</script>